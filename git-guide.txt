0、首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。
版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。
而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。
不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。

1、创建空目录
$ mkdir learngit  //新建文件夹
$ cd learngit  //进入指定文件夹
$ pwd       //显示当前目录

2、目录变成可管理的仓库（初始化）
$ git init

3、添加文件到仓库
$ git add <file>   //可一次性添加多个文件

4、提交文件到仓库
$ git commit    //可一次性提交多个文件
$ git commit -m "wrote a readme file"  //-m后面输入的是本次提交的说明

5、查看仓库当前状态
$ git status

6、查看具体修改内容
$ git diff

7、查看提交历史
$ git log

8、查看命令历史
$ git reflog

9、版本更改命令
$ git reset --hard HEAD^     //HEAD表示当前版本，上一个版本是HEAD^,上一百个版本是HEAD~100
$ git reset --hard <commit_id>  //通过git log或git reflog查看commit_id

10、查看工作区和版本库里面最新版本的区别
$ git diff HEAD -- readme.txt 

11、
